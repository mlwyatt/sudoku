exit
@board.cells[3]
@board.cells[2]
@board.cells[1]
@board.cells[0]
@board.cells
c
col_i
row_i
c
col_i
row_i
c
col_i
row_i
c
params
c
exit
c
params
c
params
c
params
c
params
c
params
c
params
c
!defined?(1.count)
defined?(1.count)
cell
@board.flatten(1).count([8])
@board.flatten(1).count(8)
@board.flatten(1).count(1)
@board.flatten(1)
c
@board.flatten(2)
@board.flatten(1)
@board.flatten
cell
c
exit
c
cell_i
row_i
c
row_i
c
row_i
c
row_i
row_1
c
cc
c
cc
c
row_i
row
c
row
cell
c
@colored_number
cell
row
c
cell
row
@board
c
session[:board]
@board
c
session[:board]
@board
exit
row
c
cell_i
row_i
c
row_i
c
row_i
c
row_i
c
row
c
row_i
c
cc
c
row_i
row
c
row
c
rwo
exit
row[8]
row[cell_8]
cell
row
exit
c
row_i
c
cell.include?(@colored_number.to_s)
cell.class
@colored_number
cell
row
c
row_i
c
row_i
row_io
c
cell.include?('5')
@colored_number
cell
c
cell
c
cell
exit
c
cell.include?('5')
cell.include?(5)
cell
row[cell_i]
c
row[cell_i]
row
c
row
row[cell_i]
c
row
row[cell_i]
cell_i
c
row
c
row
row_i
cell
cell_i
row
c
row
cell
c
cell
c
cell
@colored_number
c
@board
c
@board
session[:col].to_i
session[:col]
session[:row]
params
c
 params
c
@colored_number
c
@colored_number
c
params
c
@colored_number
@board
c
session[:colored_number]
session
params
prams
c
params[:colored_number]
params
c
@board
c
params[:number].to_i
params[:number]
params[:number[
params
c
session[:board]
@board
params
c
@board
params
c
session
params
c
params
c
@board
params
c
params
@board
c
@board
c
params
